---
alwaysApply: false
description: FAA 实际使用场景和最佳实践
---
## 记账（record_expense/record_income）
- 必填：金额+用途+受益成员（如涉及孩子时）。
- 计划示例：当信息完整时，`steps=[{"tool":"store","args":{"content":"...","ai_data":{"type":"record_expense","amount":...,"category":"...","person":"...","occurred_at":"..."}}}]`。
- 查询/统计：使用 `aggregate`（`sum` + `group_by`）并可调用 `render_chart` 输出趋势/对比。

## 健康记录（record_health）
- 必填：成员+指标+数值+单位。
- 建议将 `metric/value/unit/person/occurred_at` 写入 `ai_data`，便于后续按成员/时间趋势分析。

## 提醒（set_reminder）
- 必填：内容+具体时间(+对象)。
- 计划：先 `store` 记录提醒上下文，再 `schedule_reminder(memory_id:$LAST_STORE_ID, remind_at: ISO)`。
- 后台：定时任务获取到期提醒，通过 Threema 回发，并 `mark_reminder_sent`。

## 附件理解与检索
- Webhook 保存附件并后台派生 `transcription/ocr_text/vision_summary`；引擎在当次消息中拼接“来自附件的文本”。
- 可将派生结果作为独立记忆（type=attachment_derivation）存入，供后续检索与上下文拼装。

## 幂等与更新
- 再导入/更新：优先 `external_id/source/version`；流程：`search(filters.jsonb_equals)` → 选择 `store`/`update_memory_fields` 或跳过。

## 回退策略
- 无法生成向量：仅 filters + 简短 query；必要时多次组合 `search`。
- MCP 不可用（严格模式）：检索/聚合返回空或 error；回复仍需说明并给出可行建议。