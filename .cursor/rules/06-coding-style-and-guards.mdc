---
alwaysApply: true
description: 代码风格、设计守则与演进原则（保持工程稳定，能力自动增长）
---
## 设计与演进
- 保持工程稳定：功能尽量通过 Prompt/数据/MCP 工具演进；避免硬编码业务逻辑。
- 工具通用化：MCP 工具不含业务逻辑，用途交由 AI 决定；新增能力先扩 Prompt 与工具规格。
- 数据开放：`ai_understanding` JSONB 允许 AI 自主扩展；对关键字段（金额/时间）提供精确列便于统计。

## 编码规范
- 命名清晰：函数为动词短语、变量为名词短语，避免缩写；遵循可读性与可维护性优先。
- 控制流：优先卫语句，减少嵌套；异常要有意义处理；避免空 catch。
- 类型：导出/公共 API 显式类型；避免不安全类型断言。
- 注释：解释“为何”而非“如何”，避免冗余；不要在代码内部写“叙述性注释”。
- 格式：匹配现有风格；多行优先、长行换行；不重排无关代码。

## 交互与隐私
- 共享线程慎重展示敏感内容；渠道长度与格式遵循 Prompt `length_constraints`。
- 媒体访问统一通过签名或对象存储链接；避免直接暴露路径。

## 单元与端到端
- 新功能先写 Prompt/工具，再用 `examples/*.py` 或 API 做端到端检验；保持最小耦合与可回退策略。