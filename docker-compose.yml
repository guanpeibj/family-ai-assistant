version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: faa
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-faa_password}
      POSTGRES_DB: family_assistant
      TZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./scripts/add_user_tables.sql:/docker-entrypoint-initdb.d/02-users.sql
      - ./scripts/optimize_db.sql:/docker-entrypoint-initdb.d/03-optimize.sql
      - ./docker/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U faa -d family_assistant"]
      interval: 10s
      timeout: 5s
      retries: 5

  faa-api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - TZ=Asia/Shanghai
      - DATABASE_URL=postgresql://faa:${POSTGRES_PASSWORD:-faa_password}@postgres:5432/family_assistant
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4-turbo-preview}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - AI_PROVIDER=${AI_PROVIDER:-openai_compatible}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL}
      - LOW_LLM_BUDGET=${LOW_LLM_BUDGET:-false}
      - LLM_MAX_RETRIES=${LLM_MAX_RETRIES:-1}
      - THREEMA_GATEWAY_ID=${THREEMA_GATEWAY_ID}
      - THREEMA_SECRET=${THREEMA_SECRET}
      - THREEMA_PRIVATE_KEY=${THREEMA_PRIVATE_KEY}
      - THREEMA_WEBHOOK_URL=${THREEMA_WEBHOOK_URL}
      - APP_ENV=${APP_ENV:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SECRET_KEY=${SECRET_KEY}
      - MCP_SERVER_URL=http://faa-mcp:8000
      - MEDIA_ROOT=/data/media
      - FASTEMBED_CACHE_PATH=/data/fastembed_cache
    depends_on:
      postgres:
        condition: service_healthy
      faa-mcp:
        condition: service_started
    volumes:
      - ./src:/app/src
      - ./scripts:/app/scripts
      - ./examples:/app/examples
      - ./tests:/app/tests
      - ./data:/app/data
      - ./prompts:/app/prompts
      - ./alembic:/app/alembic
      - ./family_private_data.json:/app/family_private_data.json:ro
      - ./.env:/app/.env:ro  # 挂载 .env 文件（只读）
      - media_data:/data/media
      - fastembed_cache:/data/fastembed_cache
    command: sh -c "/app/.venv/bin/alembic upgrade head && /app/.venv/bin/uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload"

  faa-mcp:
    build:
      context: .
      dockerfile: docker/Dockerfile
    environment:
      - TZ=Asia/Shanghai
      - DATABASE_URL=postgresql://faa:${POSTGRES_PASSWORD:-faa_password}@postgres:5432/family_assistant
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - MEDIA_ROOT=/data/media
      - FASTEMBED_CACHE_PATH=/data/fastembed_cache
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9000:8000"  # MCP 服务端口
    volumes:
      - ./mcp-server:/app/mcp-server
      - ./alembic:/app/alembic
      - ./.env:/app/.env:ro  # 挂载 .env 文件（只读）
      - media_data:/data/media
      - fastembed_cache:/data/fastembed_cache
    command: python mcp-server/mcp_http_wrapper.py

volumes:
  postgres_data:
  media_data:
  fastembed_cache: